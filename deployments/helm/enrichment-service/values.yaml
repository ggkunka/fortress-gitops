# Default values for enrichment-service
# This is a YAML-formatted file.

# Image configuration
image:
  repository: mcp-security/enrichment-service
  pullPolicy: IfNotPresent
  tag: "1.0.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Service account configuration
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Pod security context
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

# Container security context
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

# Service configuration
service:
  type: ClusterIP
  port: 8082
  targetPort: 8082
  annotations: {}

# Ingress configuration
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: enrichment.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: enrichment-tls
  #    hosts:
  #      - enrichment.local

# Resource configuration
resources:
  limits:
    cpu: 2000m
    memory: 4Gi
  requests:
    cpu: 500m
    memory: 1Gi

# Autoscaling configuration
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Pod disruption budget
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}

# Replica count
replicaCount: 1

# Environment variables
env:
  # Service configuration
  ENRICHMENT_HOST: "0.0.0.0"
  ENRICHMENT_PORT: "8082"
  ENRICHMENT_WORKERS: "1"
  LOG_LEVEL: "info"
  
  # Performance configuration
  MAX_CONCURRENT_TASKS: "10"
  ENRICHMENT_TIMEOUT: "300"
  CACHE_TTL: "3600"
  
  # Redis configuration (will be overridden by secret)
  REDIS_URL: "redis://enrichment-service-redis-master:6379/0"
  REDIS_MAX_CONNECTIONS: "10"

# Secret configuration for sensitive data
secrets:
  create: true
  data:
    redis-password: ""
    misp-api-key: ""
    virustotal-api-key: ""
    otx-api-key: ""
    urlvoid-api-key: ""

# ConfigMap configuration
configMap:
  create: true
  data:
    enrichment.yaml: |
      enrichment:
        threat_intelligence:
          sources:
            misp:
              enabled: true
              timeout: 30
            virustotal:
              enabled: true
              timeout: 30
            otx:
              enabled: true
              timeout: 30
            threatminer:
              enabled: true
              timeout: 30
            urlvoid:
              enabled: true
              timeout: 30
        mitre_attack:
          update_interval: 86400  # 24 hours
          cache_ttl: 3600  # 1 hour
        caching:
          default_ttl: 3600
          max_memory: "512mb"
        processing:
          queue_size: 1000
          worker_count: 10
          batch_size: 50

# Health check configuration
healthcheck:
  enabled: true
  path: /health/live
  port: 8082
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3

# Readiness probe configuration
readinessProbe:
  enabled: true
  path: /health/ready
  port: 8082
  initialDelaySeconds: 15
  periodSeconds: 5
  timeoutSeconds: 3
  successThreshold: 1
  failureThreshold: 3

# Liveness probe configuration
livenessProbe:
  enabled: true
  path: /health/live
  port: 8082
  initialDelaySeconds: 60
  periodSeconds: 30
  timeoutSeconds: 10
  successThreshold: 1
  failureThreshold: 5

# Persistent volume configuration
persistence:
  enabled: false
  storageClass: ""
  accessMode: ReadWriteOnce
  size: 10Gi
  annotations: {}

# Service monitor for Prometheus
serviceMonitor:
  enabled: false
  namespace: ""
  labels: {}
  annotations: {}
  interval: 30s
  scrapeTimeout: 10s
  path: /metrics/prometheus

# Pod monitor for Prometheus
podMonitor:
  enabled: false
  namespace: ""
  labels: {}
  annotations: {}
  interval: 30s
  scrapeTimeout: 10s
  path: /metrics/prometheus

# Network policy
networkPolicy:
  enabled: false
  ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            name: ingestion
      - namespaceSelector:
          matchLabels:
            name: analysis
      ports:
      - port: 8082
        protocol: TCP
  egress:
    - to:
      - namespaceSelector:
          matchLabels:
            name: redis
      ports:
      - port: 6379
        protocol: TCP
    - to: []
      ports:
      - port: 53
        protocol: UDP
      - port: 443
        protocol: TCP
      - port: 80
        protocol: TCP

# Redis dependency configuration
redis:
  enabled: true
  auth:
    enabled: true
    password: "enrichment-redis-password"
  master:
    persistence:
      enabled: true
      size: 10Gi
    resources:
      limits:
        memory: 1Gi
        cpu: 500m
      requests:
        memory: 512Mi
        cpu: 250m
  replica:
    replicaCount: 1
    persistence:
      enabled: true
      size: 10Gi
    resources:
      limits:
        memory: 1Gi
        cpu: 500m
      requests:
        memory: 512Mi
        cpu: 250m

# Pod annotations
podAnnotations: {}

# Pod labels
podLabels: {}

# Init containers
initContainers: []

# Extra containers
extraContainers: []

# Extra volumes
extraVolumes: []

# Extra volume mounts
extraVolumeMounts: []

# Extra environment variables from
envFrom: []

# Lifecycle hooks
lifecycle: {}

# Termination grace period seconds
terminationGracePeriodSeconds: 30

# DNS policy
dnsPolicy: ClusterFirst

# Restart policy
restartPolicy: Always

# Priority class name
priorityClassName: ""

# Runtime class name
runtimeClassName: ""

# Scheduler name
schedulerName: ""

# Host network
hostNetwork: false

# Host PID
hostPID: false

# Host IPC
hostIPC: false

# Share process namespace
shareProcessNamespace: false

# Topology spread constraints
topologySpreadConstraints: []

# Pod management policy
podManagementPolicy: Parallel

# Update strategy
updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 1
    maxSurge: 1