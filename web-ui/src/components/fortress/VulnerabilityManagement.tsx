import React, { useState } from 'react';
import {
  Card,
  CardContent,
  Typography,
  Box,
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
  Paper,
  Chip,
  Button,
  IconButton,
  Tooltip,
  Avatar,
  LinearProgress,
  useTheme,
  alpha,
} from '@mui/material';
import {
  BugReport as VulnIcon,
  Security as SecurityIcon,
  Build as PatchIcon,
  Block as IgnoreIcon,
  Visibility as ViewIcon,
  Download as ExportIcon,
  FilterList as FilterIcon,
  TrendingUp as TrendingUpIcon,
  Warning as WarningIcon,
} from '@mui/icons-material';
import { motion } from 'framer-motion';

const VulnerabilityManagement: React.FC = () => {
  const theme = useTheme();
  const [selectedFilter, setSelectedFilter] = useState('all');

  const vulnData = {
    summary: {
      total: 234,
      critical: 8,
      high: 23,
      medium: 89,
      low: 114,
      patched: 156,
      ignored: 12
    },
    topVulnerabilities: [
      {
        id: 'CVE-2024-1234',
        severity: 'critical',
        score: 9.8,
        title: 'Remote Code Execution in Container Runtime',
        description: 'Critical vulnerability allowing remote code execution through container runtime API',
        affectedAssets: 45,
        status: 'patch-available',
        published: '2024-01-15',
        vector: 'Network',
        complexity: 'Low',
        privileges: 'None',
        impact: 'Complete system compromise'
      },
      {
        id: 'CVE-2024-5678',
        severity: 'high',
        score: 8.2,
        title: 'Privilege Escalation in Kubernetes API',
        description: 'High severity vulnerability in Kubernetes API server allowing privilege escalation',
        affectedAssets: 12,
        status: 'mitigated',
        published: '2024-01-10',
        vector: 'Local',
        complexity: 'Low',
        privileges: 'Low',
        impact: 'Privilege escalation'
      },
      {
        id: 'CVE-2024-9012',
        severity: 'medium',
        score: 6.5,
        title: 'Information Disclosure in Web Framework',
        description: 'Medium severity information disclosure vulnerability in web application framework',
        affectedAssets: 78,
        status: 'investigating',
        published: '2024-01-08',
        vector: 'Network',
        complexity: 'Medium',
        privileges: 'None',
        impact: 'Information disclosure'
      },
      {
        id: 'CVE-2024-3456',
        severity: 'high',
        score: 7.9,
        title: 'SQL Injection in Database Driver',
        description: 'SQL injection vulnerability in database connection driver',
        affectedAssets: 23,
        status: 'patch-available',
        published: '2024-01-05',
        vector: 'Network',
        complexity: 'Low',
        privileges: 'None',
        impact: 'Data breach potential'
      },
      {
        id: 'CVE-2024-7890',
        severity: 'critical',
        score: 9.1,
        title: 'Buffer Overflow in Network Library',
        description: 'Critical buffer overflow vulnerability in network processing library',
        affectedAssets: 67,
        status: 'patched',
        published: '2024-01-01',
        vector: 'Network',
        complexity: 'Low',
        privileges: 'None',
        impact: 'Remote code execution'
      }
    ]
  };

  const getSeverityColor = (severity: string) => {
    switch (severity) {
      case 'critical': return '#ef4444';
      case 'high': return '#f97316';
      case 'medium': return '#eab308';
      case 'low': return '#06b6d4';
      default: return '#6b7280';
    }
  };

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'patch-available': return '#3b82f6';
      case 'patched': return '#10b981';
      case 'mitigated': return '#8b5cf6';
      case 'investigating': return '#eab308';
      case 'ignored': return '#6b7280';
      default: return '#6b7280';
    }
  };

  const getStatusLabel = (status: string) => {
    switch (status) {
      case 'patch-available': return 'Patch Available';
      case 'patched': return 'Patched';
      case 'mitigated': return 'Mitigated';
      case 'investigating': return 'Investigating';
      case 'ignored': return 'Ignored';
      default: return status;
    }
  };

  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.5, delay: 0.4 }}
    >
      <Card sx={{ 
        background: 'linear-gradient(135deg, #1e293b, #334155)', 
        border: '1px solid rgba(255,255,255,0.1)'
      }}>
        <CardContent>
          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>
            <Typography variant="h6" sx={{ display: 'flex', alignItems: 'center' }}>
              <VulnIcon sx={{ mr: 1, color: '#ef4444' }} />
              Vulnerability Management
            </Typography>
            <Box sx={{ display: 'flex', gap: 1 }}>
              <Button 
                size="small" 
                startIcon={<FilterIcon />}
                sx={{ color: 'rgba(255,255,255,0.7)' }}
              >
                Filter
              </Button>
              <Button 
                size="small" 
                startIcon={<ExportIcon />}
                sx={{ color: 'rgba(255,255,255,0.7)' }}
              >
                Export
              </Button>
            </Box>
          </Box>

          {/* Vulnerability Summary */}
          <Box sx={{ 
            display: 'flex', 
            justifyContent: 'space-around', 
            mb: 3,
            p: 3,
            backgroundColor: 'rgba(0,0,0,0.2)',
            borderRadius: 2
          }}>
            <Box sx={{ textAlign: 'center' }}>
              <Avatar sx={{ 
                width: 48, 
                height: 48, 
                mx: 'auto', 
                mb: 1, 
                backgroundColor: '#3b82f6' 
              }}>
                <SecurityIcon />
              </Avatar>
              <Typography variant="h4" sx={{ fontWeight: 700, color: '#3b82f6' }}>
                {vulnData.summary.total}
              </Typography>
              <Typography variant="body2" sx={{ color: 'rgba(255,255,255,0.7)' }}>
                Total Vulnerabilities
              </Typography>
            </Box>
            <Box sx={{ textAlign: 'center' }}>
              <Typography variant="h5" sx={{ color: '#ef4444', fontWeight: 700 }}>
                {vulnData.summary.critical}
              </Typography>
              <Typography variant="caption" sx={{ color: 'rgba(255,255,255,0.7)' }}>
                Critical
              </Typography>
            </Box>
            <Box sx={{ textAlign: 'center' }}>
              <Typography variant="h5" sx={{ color: '#f97316', fontWeight: 700 }}>
                {vulnData.summary.high}
              </Typography>
              <Typography variant="caption" sx={{ color: 'rgba(255,255,255,0.7)' }}>
                High
              </Typography>
            </Box>
            <Box sx={{ textAlign: 'center' }}>
              <Typography variant="h5" sx={{ color: '#eab308', fontWeight: 700 }}>
                {vulnData.summary.medium}
              </Typography>
              <Typography variant="caption" sx={{ color: 'rgba(255,255,255,0.7)' }}>
                Medium
              </Typography>
            </Box>
            <Box sx={{ textAlign: 'center' }}>
              <Typography variant="h5" sx={{ color: '#06b6d4', fontWeight: 700 }}>
                {vulnData.summary.low}
              </Typography>
              <Typography variant="caption" sx={{ color: 'rgba(255,255,255,0.7)' }}>
                Low
              </Typography>
            </Box>
          </Box>

          {/* Remediation Progress */}
          <Box sx={{ mb: 3 }}>
            <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>
              <Typography variant="subtitle2" sx={{ color: 'rgba(255,255,255,0.8)' }}>
                Remediation Progress
              </Typography>
              <Typography variant="body2" sx={{ color: '#10b981', fontWeight: 600 }}>
                {Math.round((vulnData.summary.patched / vulnData.summary.total) * 100)}% Complete
              </Typography>
            </Box>
            <LinearProgress 
              variant="determinate" 
              value={(vulnData.summary.patched / vulnData.summary.total) * 100}
              sx={{ 
                height: 8, 
                borderRadius: 4,
                backgroundColor: 'rgba(255,255,255,0.1)',
                '& .MuiLinearProgress-bar': {
                  backgroundColor: '#10b981',
                  borderRadius: 4
                }
              }}
            />
            <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 1 }}>
              <Typography variant="caption" sx={{ color: 'rgba(255,255,255,0.6)' }}>
                {vulnData.summary.patched} Patched â€¢ {vulnData.summary.ignored} Ignored
              </Typography>
              <Typography variant="caption" sx={{ color: 'rgba(255,255,255,0.6)' }}>
                {vulnData.summary.total - vulnData.summary.patched - vulnData.summary.ignored} Remaining
              </Typography>
            </Box>
          </Box>

          {/* Top Vulnerabilities Table */}
          <Typography variant="subtitle2" sx={{ mb: 2, color: 'rgba(255,255,255,0.8)' }}>
            Critical & High Severity Vulnerabilities
          </Typography>
          <TableContainer component={Paper} sx={{ 
            backgroundColor: 'rgba(0,0,0,0.2)',
            border: '1px solid rgba(255,255,255,0.1)'
          }}>
            <Table>
              <TableHead>
                <TableRow>
                  <TableCell sx={{ color: 'rgba(255,255,255,0.8)', fontWeight: 600 }}>
                    CVE ID
                  </TableCell>
                  <TableCell sx={{ color: 'rgba(255,255,255,0.8)', fontWeight: 600 }}>
                    Severity
                  </TableCell>
                  <TableCell sx={{ color: 'rgba(255,255,255,0.8)', fontWeight: 600 }}>
                    Title
                  </TableCell>
                  <TableCell sx={{ color: 'rgba(255,255,255,0.8)', fontWeight: 600 }}>
                    Affected Assets
                  </TableCell>
                  <TableCell sx={{ color: 'rgba(255,255,255,0.8)', fontWeight: 600 }}>
                    Status
                  </TableCell>
                  <TableCell sx={{ color: 'rgba(255,255,255,0.8)', fontWeight: 600 }}>
                    Actions
                  </TableCell>
                </TableRow>
              </TableHead>
              <TableBody>
                {vulnData.topVulnerabilities.map((vuln, index) => (
                  <motion.tr
                    key={vuln.id}
                    initial={{ opacity: 0, x: -20 }}
                    animate={{ opacity: 1, x: 0 }}
                    transition={{ duration: 0.3, delay: index * 0.1 }}
                    component={TableRow}
                    sx={{ 
                      '&:hover': { 
                        backgroundColor: 'rgba(255,255,255,0.05)' 
                      }
                    }}
                  >
                    <TableCell sx={{ color: 'white' }}>
                      <Box>
                        <Typography variant="subtitle2" sx={{ fontWeight: 600, fontFamily: 'monospace' }}>
                          {vuln.id}
                        </Typography>
                        <Typography variant="caption" sx={{ color: 'rgba(255,255,255,0.6)' }}>
                          CVSS {vuln.score}
                        </Typography>
                      </Box>
                    </TableCell>
                    <TableCell>
                      <Chip 
                        label={vuln.severity.toUpperCase()}
                        size="small"
                        sx={{ 
                          backgroundColor: alpha(getSeverityColor(vuln.severity), 0.2),
                          color: getSeverityColor(vuln.severity),
                          fontWeight: 600
                        }}
                      />
                    </TableCell>
                    <TableCell sx={{ color: 'white', maxWidth: 300 }}>
                      <Typography variant="subtitle2" sx={{ fontWeight: 600, mb: 0.5 }}>
                        {vuln.title}
                      </Typography>
                      <Typography variant="caption" sx={{ color: 'rgba(255,255,255,0.6)' }}>
                        {vuln.description}
                      </Typography>
                    </TableCell>
                    <TableCell sx={{ color: 'white' }}>
                      <Box sx={{ display: 'flex', alignItems: 'center' }}>
                        <WarningIcon sx={{ 
                          color: getSeverityColor(vuln.severity), 
                          mr: 1, 
                          fontSize: 16 
                        }} />
                        <Typography variant="body2" sx={{ fontWeight: 600 }}>
                          {vuln.affectedAssets}
                        </Typography>
                      </Box>
                    </TableCell>
                    <TableCell>
                      <Chip 
                        label={getStatusLabel(vuln.status)}
                        size="small"
                        sx={{ 
                          backgroundColor: alpha(getStatusColor(vuln.status), 0.2),
                          color: getStatusColor(vuln.status)
                        }}
                      />
                    </TableCell>
                    <TableCell>
                      <Box sx={{ display: 'flex', gap: 1 }}>
                        <Tooltip title="View Details">
                          <IconButton size="small" sx={{ color: 'rgba(255,255,255,0.7)' }}>
                            <ViewIcon />
                          </IconButton>
                        </Tooltip>
                        {vuln.status === 'patch-available' && (
                          <Tooltip title="Apply Patch">
                            <IconButton size="small" sx={{ color: '#10b981' }}>
                              <PatchIcon />
                            </IconButton>
                          </Tooltip>
                        )}
                        <Tooltip title="Ignore">
                          <IconButton size="small" sx={{ color: '#6b7280' }}>
                            <IgnoreIcon />
                          </IconButton>
                        </Tooltip>
                      </Box>
                    </TableCell>
                  </motion.tr>
                ))}
              </TableBody>
            </Table>
          </TableContainer>

          {/* Action Buttons */}
          <Box sx={{ display: 'flex', justifyContent: 'center', gap: 2, mt: 3 }}>
            <Button 
              variant="contained" 
              startIcon={<PatchIcon />}
              sx={{ 
                background: 'linear-gradient(135deg, #10b981, #059669)',
                '&:hover': {
                  background: 'linear-gradient(135deg, #059669, #047857)'
                }
              }}
            >
              Bulk Patch Available
            </Button>
            <Button 
              variant="outlined" 
              startIcon={<SecurityIcon />}
              sx={{ 
                color: 'white', 
                borderColor: 'rgba(255,255,255,0.3)',
                '&:hover': {
                  borderColor: 'rgba(255,255,255,0.5)',
                  backgroundColor: 'rgba(255,255,255,0.05)'
                }
              }}
            >
              Generate Report
            </Button>
          </Box>
        </CardContent>
      </Card>
    </motion.div>
  );
};

export default VulnerabilityManagement;
