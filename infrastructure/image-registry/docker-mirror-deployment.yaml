apiVersion: v1
kind: Namespace
metadata:
  name: image-registry
  labels:
    name: image-registry

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: registry-storage
  namespace: image-registry
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 200Gi
  storageClassName: local-path

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: registry-config
  namespace: image-registry
data:
  config.yml: |
    version: 0.1
    log:
      level: info
    storage:
      filesystem:
        rootdirectory: /var/lib/registry
    http:
      addr: :5000
      headers:
        X-Content-Type-Options: [nosniff]
    proxy:
      remoteurl: https://registry-1.docker.io
      ttl: 168h
    compatibility:
      schema1:
        enabled: true

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry-mirror
  namespace: image-registry
  labels:
    app: docker-registry-mirror
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-registry-mirror
  template:
    metadata:
      labels:
        app: docker-registry-mirror
    spec:
      containers:
      - name: registry
        image: registry:2.8
        ports:
        - containerPort: 5000
        env:
        - name: REGISTRY_HTTP_ADDR
          value: "0.0.0.0:5000"
        - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
          value: "/var/lib/registry"
        volumeMounts:
        - name: registry-storage
          mountPath: /var/lib/registry
        - name: registry-config
          mountPath: /etc/docker/registry/config.yml
          subPath: config.yml
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /v2/
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /v2/
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 10
      volumes:
      - name: registry-storage
        persistentVolumeClaim:
          claimName: registry-storage
      - name: registry-config
        configMap:
          name: registry-config

---
apiVersion: v1
kind: Service
metadata:
  name: docker-registry-mirror
  namespace: image-registry
  labels:
    app: docker-registry-mirror
spec:
  selector:
    app: docker-registry-mirror
  ports:
  - name: registry
    port: 5000
    targetPort: 5000
    nodePort: 30500
  type: NodePort

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: registry-ingress
  namespace: image-registry
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
spec:
  rules:
  - host: registry.fortress.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: docker-registry-mirror
            port:
              number: 5000
