apiVersion: v1
kind: Secret
metadata:
  name: fortress-database-secret
  labels:
    app: fortress-platform
    component: database
type: Opaque
stringData:
  postgres-password: "REPLACE_WITH_SECURE_PASSWORD"
  database-url: "postgresql://fortress:REPLACE_WITH_SECURE_PASSWORD@fortress-postgresql:5432/fortress"

---
apiVersion: v1
kind: Secret
metadata:
  name: fortress-quay-secret
  labels:
    app: fortress-platform
    component: registry
type: kubernetes.io/dockerconfigjson
stringData:
  .dockerconfigjson: |
    {
      "auths": {
        "quay-registry.apps.in-iptpstcfxhubcl1.blr.nokia-rdnet.net": {
          "username": "REPLACE_WITH_QUAY_USERNAME",
          "password": "REPLACE_WITH_QUAY_PASSWORD",
          "auth": "REPLACE_WITH_BASE64_AUTH"
        }
      }
    }

---
apiVersion: v1
kind: Secret
metadata:
  name: ghcr-secret
  labels:
    app: fortress-platform
    component: registry
type: kubernetes.io/dockerconfigjson
stringData:
  .dockerconfigjson: |
    {
      "auths": {
        "ghcr.io": {
          "username": "REPLACE_WITH_GITHUB_USERNAME",
          "password": "REPLACE_WITH_GITHUB_TOKEN",
          "auth": "REPLACE_WITH_BASE64_AUTH"
        }
      }
    }

---
apiVersion: v1
kind: Secret
metadata:
  name: fortress-tls-secret
  labels:
    app: fortress-platform
    component: ingress
type: kubernetes.io/tls
data:
  # These would be replaced with actual TLS certificates in production
  tls.crt: LS0tLS1CRUdJTi... # Base64 encoded certificate
  tls.key: LS0tLS1CRUdJTi... # Base64 encoded private key
