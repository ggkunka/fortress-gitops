apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
  labels:
    app: elasticsearch
    component: search-analytics
spec:
  serviceName: elasticsearch-headless
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
        component: search-analytics
    spec:
      containers:
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
        ports:
        - containerPort: 9200
          name: http
        - containerPort: 9300
          name: transport
        env:
        - name: discovery.type
          value: "single-node"
        - name: ES_JAVA_OPTS
          value: "-Xms512m -Xmx512m"
        - name: xpack.security.enabled
          value: "false"
        - name: xpack.security.enrollment.enabled
          value: "false"
        - name: cluster.name
          value: "mcp-security-cluster"
        - name: node.name
          value: "mcp-es-node-1"
        - name: bootstrap.memory_lock
          value: "false"
        - name: network.host
          value: "0.0.0.0"
        - name: http.port
          value: "9200"
        - name: action.destructive_requires_name
          value: "false"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        volumeMounts:
        - name: elasticsearch-data
          mountPath: /usr/share/elasticsearch/data
        livenessProbe:
          httpGet:
            path: /_cluster/health
            port: 9200
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /_cluster/health
            port: 9200
          initialDelaySeconds: 30
          periodSeconds: 10
  volumeClaimTemplates:
  - metadata:
      name: elasticsearch-data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: "local-path"
      resources:
        requests:
          storage: 20Gi
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-headless
  labels:
    app: elasticsearch
    component: search-analytics
spec:
  clusterIP: None
  selector:
    app: elasticsearch
  ports:
  - name: http
    port: 9200
    targetPort: 9200
  - name: transport
    port: 9300
    targetPort: 9300
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  labels:
    app: elasticsearch
    component: search-analytics
spec:
  selector:
    app: elasticsearch
  ports:
  - name: http
    port: 9200
    targetPort: 9200
  type: ClusterIP
---
apiVersion: batch/v1
kind: Job
metadata:
  name: elasticsearch-setup
  labels:
    app: elasticsearch-setup
    component: search-analytics
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: elasticsearch-setup
        image: curlimages/curl:8.4.0
        command:
        - /bin/sh
        - -c
        - |
          echo "Waiting for Elasticsearch to be ready..."
          until curl -s http://elasticsearch:9200/_cluster/health; do
            echo "Elasticsearch not ready, waiting..."
            sleep 10
          done
          
          echo "Creating MCP Security Platform indices..."
          
          # Security events index
          curl -X PUT "http://elasticsearch:9200/mcp-security-events" -H 'Content-Type: application/json' -d'
          {
            "settings": {
              "number_of_shards": 1,
              "number_of_replicas": 0,
              "index.refresh_interval": "5s"
            },
            "mappings": {
              "properties": {
                "timestamp": {"type": "date"},
                "event_type": {"type": "keyword"},
                "severity": {"type": "keyword"},
                "source_service": {"type": "keyword"},
                "message": {"type": "text"},
                "metadata": {"type": "object"}
              }
            }
          }'
          
          # Vulnerability data index
          curl -X PUT "http://elasticsearch:9200/mcp-vulnerabilities" -H 'Content-Type: application/json' -d'
          {
            "settings": {
              "number_of_shards": 1,
              "number_of_replicas": 0
            },
            "mappings": {
              "properties": {
                "cve_id": {"type": "keyword"},
                "severity": {"type": "keyword"},
                "cvss_score": {"type": "float"},
                "description": {"type": "text"},
                "affected_systems": {"type": "keyword"},
                "discovery_date": {"type": "date"},
                "status": {"type": "keyword"}
              }
            }
          }'
          
          # Audit logs index
          curl -X PUT "http://elasticsearch:9200/mcp-audit-logs" -H 'Content-Type: application/json' -d'
          {
            "settings": {
              "number_of_shards": 1,
              "number_of_replicas": 0
            },
            "mappings": {
              "properties": {
                "timestamp": {"type": "date"},
                "user": {"type": "keyword"},
                "action": {"type": "keyword"},
                "resource": {"type": "keyword"},
                "ip_address": {"type": "ip"},
                "user_agent": {"type": "text"}
              }
            }
          }'
          
          echo "Elasticsearch indices created successfully!"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
