apiVersion: v1
kind: ConfigMap
metadata:
  name: fortress-api-gateway
  namespace: mcp-security
data:
  main.py: |
    from fastapi import FastAPI
    from fastapi.middleware.cors import CORSMiddleware
    import uvicorn
    from datetime import datetime
    
    app = FastAPI(title="Fortress API Gateway", version="2.0.0")
    app.add_middleware(CORSMiddleware, allow_origins=["*"], allow_methods=["*"], allow_headers=["*"])
    
    @app.get("/api/dashboard")
    def get_dashboard():
        return {"security_score": 87.3, "assets": 1247, "alerts": 23, "agents": 45}
    
    @app.get("/api/agents")
    def get_agents():
        return {"agents": [{"id": "fortress-prod-001", "status": "active", "cluster": "fortress-prod"}]}
    
    @app.get("/api/vulnerabilities") 
    def get_vulns():
        return {"vulns": [{"cve": "CVE-2023-5678", "severity": "CRITICAL", "asset": "nginx:1.20"}]}
    
    if __name__ == "__main__": uvicorn.run(app, host="0.0.0.0", port=8200)
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fortress-api-gateway
  namespace: mcp-security
spec:
  replicas: 2
  selector:
    matchLabels:
      app: fortress-api-gateway
  template:
    metadata:
      labels:
        app: fortress-api-gateway
    spec:
      containers:
      - name: api-gateway
        image: python:3.11-slim
        env:
        - name: HTTP_PROXY
          value: "http://10.158.100.6:8080"
        volumeMounts:
        - name: code
          mountPath: /app
        command: ["bash", "-c", "cd /app && pip install fastapi uvicorn && python main.py"]
        ports:
        - containerPort: 8200
      volumes:
      - name: code
        configMap:
          name: fortress-api-gateway
---
apiVersion: v1
kind: Service
metadata:
  name: fortress-api-gateway
  namespace: mcp-security
spec:
  selector:
    app: fortress-api-gateway
  ports:
  - port: 8200
