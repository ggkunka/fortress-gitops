apiVersion: apps/v1
kind: Deployment
metadata:
  name: scanner-manager
  labels:
    app: scanner-manager
    component: security-scanning
spec:
  replicas: 1
  selector:
    matchLabels:
      app: scanner-manager
  template:
    metadata:
      labels:
        app: scanner-manager
        component: security-scanning
    spec:
      containers:
      - name: scanner-manager
        image: python:3.11-slim
        command: ["/bin/sh"]
        args: ["-c", "echo 'Scanner Manager Service - MCP Security Platform' && echo 'Container ready for development' && tail -f /dev/null"]
        ports:
        - containerPort: 8082
        env:
        - name: SERVICE_NAME
          value: "scanner-manager"
        - name: DATABASE_URL
          value: "postgresql://mcp_user:SecureUserPassword123!@postgresql:5432/mcp_security"
        - name: REDIS_URL
          value: "redis://redis-master:6379/0"
        - name: LOG_LEVEL
          value: "info"
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - "echo 'Scanner Manager is alive'"
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - "echo 'Scanner Manager is ready'"
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: scanner-manager
  labels:
    app: scanner-manager
    component: security-scanning
spec:
  selector:
    app: scanner-manager
  ports:
  - name: http
    port: 8082
    targetPort: 8082
    protocol: TCP
  type: ClusterIP
